В файлах example_resize_1600x832_TN.py и example_resize_2688x1512.py скрипты питон, которые локально изменяют размер изображений в папке, приводя их к нужным пропорциям и размерам.

Используя логику этих скриптов, создай приложение для Streamlit, которое выполняло бы функции пакетного изменения размеров загруженных изображений. В интерфейсе должна быть возможность выбрать один из двух вариантов разрешений результатирующих файлов: 1600x832 и 2688x1512 - это нужно сделать ползунком, значения которого будут подписаны так:
1600x832 (видео (1i.jpg, 2i.jpg...) и TN)
2688x1512 (изображения (1.jpg, 2.jpg...))

При работе приложения пользователь должен иметь возможность загрузить пакетно файлы изображений со своего компьютера в программу, выбрать нужный формат, нажать кнопку "Обработать" и скачать разом все обработанные скриптом изображения (не по одному файлу, а все за раз, например, в архиве). Вся логик должна быть взята из файлов с примерами скриптов.

Также создай файл requirements.txt в папке проекта.




Делаю программу:

python -m venv virtual_environment
virtual_environment\Scripts\activate
pip install -r requirements.txt
virtual_environment\Scripts\activate
streamlit run app.py

Не работает.

# Обновите pip внутри виртуального окружения
python -m pip install --upgrade pip

# Установите Streamlit
pip install streamlit==1.31.1

# Установите предварительно скомпилированную версию Pillow
pip install --only-binary :all: Pillow==10.1.0

Если установка Pillow все еще не удается, попробуйте более старую версию:
pip install Pillow==9.5.0 //Только эта и установилась

Сейчас программа работает, но выбор параметров с помощью ползунка смотрится некрасиво и неудобно в использовании. Давай сделаем радиабатоны друг под другом. И давай добавим кнопку "Очистить", которая будет сбрасывать загруженые файлы - это нужно для того, чтобы после обработки первого пакета изображений сбросить все загруженные изображения и загрузить новый пакет.

streamlit run app.py

